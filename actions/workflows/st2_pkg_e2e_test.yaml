---
version: '2.0'

st2ci.st2_pkg_e2e_test:
    type: direct
    input:
        - hostname
        - dns_zone
        - instance_type
        - environment
        - key_name
        - keyfile
        - distro
        - role
        - release
        - version
        - dev_build
        - initial_commit
        - enterprise
        - enterprise_key
        - pkg_env
        - bootstrap_branch
        - bootstrap_script
        - triggering_commit_url
        - debug

    vars:
        vm_id: null
        vm_fqdn: <% $.hostname %>.<% $.dns_zone %>
        installed:
            version_str: not installed
        bootstrap_script_url: <% coalesce(
            $.bootstrap_script,
            "https://raw.githubusercontent.com/StackStorm/st2-packages/" +
                $.bootstrap_branch + "/scripts/st2_bootstrap.sh") %>
        st2_username: st2admin
        st2_password: Ch@ngeMe
        github_status_org: StackStorm
        github_status_repo: st2
        github_status_context: st2/e2e/<% $.distro.toLower() %><% $.enterprise and '-enterprise' or '' %>
        github_status_url: https://buildstatus.stackstorm.org/execution/<% env().st2_execution_id %>
        notify_channels:
            - "#thunderdome"
        notify_failure_channels:
            - "#thunderdome"
            - "#stackstorm"

    output:
        versions: <% $.installed.versions %>

    task-defaults:
        on-error:
            - destroy_vm_on_failure: <% not $.debug and $.vm_id != null %>
            - notify_failure: <% $.debug or (not $.debug and $.vm_id = null) %>

    tasks:
        get_webui_server:
            action: core.noop
            publish:
                webui_base_url: https://st2-build
            on-success:
                - notify_start
                - create_vm
        create_vm:
            action: st2cd.create_vm_role
            input:
                hostname: <% $.hostname %>
                instance_type: <% $.instance_type %>
                environment: <% $.environment %>
                key_name: <% $.key_name %>
                keyfile: <% $.keyfile %>
                dns_zone: <% $.dns_zone %>
                distro: pkg_<% $.distro %>
                role: <% $.role %>
            publish:
                vm_info: <% task(create_vm).result.vm_info %>
                vm_id: <% task(create_vm).result.vm_info.id %>
            on-success:
                - patch_rhel6: <% $.distro = 'RHEL6' %>
                - get_bootstrap_script: <% $.distro != 'RHEL6' %>
        patch_rhel6:
            action: core.remote_sudo
            input:
                hosts: <% $.vm_info.private_ip_address %>
                cmd: yum-config-manager --enable rhui-REGION-rhel-server-releases-optional
            on-success:
                - patch_rhel6_curl
        patch_rhel6_curl:
            action: core.remote_sudo
            input:
                hosts: <% $.vm_info.private_ip_address %>
                cmd: yum install -y curl nss
                timeout: 180
            on-success:
                - get_bootstrap_script
        get_bootstrap_script:
            action: core.remote_sudo
            input:
                hosts: <% $.vm_info.private_ip_address %>
                cmd: curl -Ss -k -o /tmp/st2_bootstrap.sh <% $.bootstrap_script_url %>
            on-success:
                - run_bootstrap_script: <% not $.dev_build %>
                - run_bootstrap_script_dev: <% $.dev_build %>
        run_bootstrap_script:
            action: core.remote_sudo
            input:
                hosts: <% $.vm_info.private_ip_address %>
                cmd: bash /tmp/st2_bootstrap.sh --<% $.pkg_env %> --<% $.release %> --version=<% coalesce($.version, '') %> --user=<% $.st2_username %> --password=<% $.st2_password %>
                timeout: 900
            on-success:
                - upgrade_to_enterprise: <% $.enterprise %>
                - get_installed_version: <% not $.enterprise %>
        run_bootstrap_script_dev:
            action: core.remote_sudo
            input:
                hosts: <% $.vm_info.private_ip_address %>
                cmd: bash /tmp/st2_bootstrap.sh --dev=<% $.dev_build %> --user=<% $.st2_username %> --password=<% $.st2_password %>
                timeout: 900
            on-success:
                - upgrade_to_enterprise: <% $.enterprise %>
                - get_installed_version: <% not $.enterprise %>
        upgrade_to_enterprise:
            action: st2cd.st2_upgrade_to_enterprise
            input:
                hosts: <% $.vm_info.private_ip_address %>
                license_key: <% $.enterprise_key %>
                distro: <% $.distro %>
                pkg_env: <% $.pkg_env %>
                release: <% $.release %>
                timeout: 120
            on-success:
                - get_installed_version
        get_installed_version:
            action: st2cd.st2_get_installed_version
            input:
                host: <% $.vm_info.private_ip_address %>
            publish:
                installed:
                    distro: <% task(get_installed_version).result.distro %>
                    versions: <% task(get_installed_version).result.versions %>
                    version_str: <%
                        task(get_installed_version).result.versions.items().select(
                            $[0] + "=" + $[1]).join("\n\t") %>
            on-success:
                - run_e2e_tests
        run_e2e_tests:
            action: st2cd.st2_e2e_tests
            input:
                host_ip: <% $.vm_info.private_ip_address %>
                host_fqdn: <% $.vm_fqdn %>
                version: <% $.version %>
                st2_username: <% $.st2_username %>
                st2_password: <% $.st2_password %>
            on-success:
                - destroy_vm: <% not $.debug %>
                - notify_success: <% $.debug %>


        notify_start:
            with-items: channel in <% $.notify_channels %>
            action: slack.chat.postMessage
            input:
                channel: <% $.channel %>
                text: ""
                attachments: '[{"fallback": "[st2ci.st2_pkg_e2e_test: STARTED]", "title": "[st2ci.st2_pkg_e2e_test: STARTED]", "title_link": "<% $.webui_base_url %>/#/history/<% env().st2_execution_id %>/general", "text": "COMMIT: <% coalesce($.triggering_commit_url, ''n/a'') %>\nHOSTNAME: <% $.vm_fqdn %>\nDISTRO: <% $.distro %>\nENTERPRISE: <% $.enterprise %>\nRELEASE: <% $.pkg_env %> <% $.release %>\nVERSION: <% coalesce($.version, ''latest'') %>\nBOOTSTRAP: <% $.bootstrap_script_url %>", "color": "#808080"}]'
            on-complete:
                - generate_build_page: <% $.initial_commit %>
        generate_build_page:
            action: jinja.render_file
            input:
                template_pack: st2ci
                template_path: templates/build_page.md.j2
                include_execution: <% env().st2_execution_id %>
            on-success:
                - set_github_status_pending
        set_github_status_pending:
            action: github.add_status
            input:
                user: <% $.github_status_org %>
                repo: <% $.github_status_repo %>
                sha: <% $.initial_commit %>
                state: pending
                context: <% $.github_status_context %>
                description: E2E tests are running...
                target_url: <% $.github_status_url %>


        destroy_vm:
            action: st2cd.destroy_vm
            input:
                hostname: <% $.hostname %>
                instance_id: <% $.vm_id %>
            retry:
                count: 2
                delay: 30
            on-success:
                - notify_success
            on-error:
                - notify_failure

        destroy_vm_on_failure:
            action: st2cd.destroy_vm
            input:
                hostname: <% $.hostname %>
                instance_id: <% $.vm_id %>
            retry:
                count: 2
                delay: 30
            on-complete:
                - notify_failure
            on-error:
                - noop


        notify_success:
            with-items: channel in <% $.notify_channels %>
            action: slack.chat.postMessage
            input:
                channel: <% $.channel %>
                text: ""
                attachments: '[{"fallback": "[st2ci.st2_pkg_e2e_test: SUCCEEDED]", "title": "[st2ci.st2_pkg_e2e_test: SUCCEEDED]", "title_link": "<% $.webui_base_url %>/#/history/<% env().st2_execution_id %>/general", "text": "COMMIT: <% coalesce($.triggering_commit_url, ''n/a'') %>\nHOSTNAME: <% $.vm_fqdn %>\nDISTRO: <% $.distro %>\nENTERPRISE: <% $.enterprise %>\nRELEASE: <% $.pkg_env %> <% $.release %>\nVERSION: <% coalesce($.version, ''latest'') %>\nVERSION INSTALLED:\n\t<% $.installed.version_str %>\nBOOTSTRAP: <% $.bootstrap_script_url %>", "color": "#008000"}]'
            on-complete:
                - generate_build_page_success: <% $.initial_commit %>
        generate_build_page_success:
            action: jinja.render_file
            input:
                template_pack: st2ci
                template_path: templates/build_page.md.j2
                include_execution: <% env().st2_execution_id %>
            on-success:
                - set_github_status_success
        set_github_status_success:
            action: github.add_status
            input:
                user: <% $.github_status_org %>
                repo: <% $.github_status_repo %>
                sha: <% $.initial_commit %>
                state: success
                context: <% $.github_status_context %>
                description: E2E tests have finished successfully
                target_url: <% $.github_status_url %>

        notify_failure:
            with-items: channel in <% $.notify_failure_channels %>
            action: slack.chat.postMessage
            input:
                channel: <% $.channel %>
                text: ""
                attachments: '[{"fallback": "[st2ci.st2_pkg_e2e_test: FAILED]", "title": "[st2ci.st2_pkg_e2e_test: FAILED]", "title_link": "<% $.webui_base_url %>/#/history/<% env().st2_execution_id %>/general", "text": "COMMIT: <% coalesce($.triggering_commit_url, ''n/a'') %>\nHOSTNAME: <% $.vm_fqdn %>\nDISTRO: <% $.distro %>\nENTERPRISE: <% $.enterprise %>\nRELEASE: <% $.pkg_env %> <% $.release %>\nVERSION: <% coalesce($.version, ''latest'') %>\nVERSION INSTALLED:\n\t<% $.installed.version_str %>\nBOOTSTRAP: <% $.bootstrap_script_url %>", "color": "#FF0000"}]'
            on-complete:
                - generate_build_page_failure: <% $.initial_commit %>
                - fail
        generate_build_page_failure:
            action: jinja.render_file
            input:
                template_pack: st2ci
                template_path: templates/build_page.md.j2
                include_execution: <% env().st2_execution_id %>
            on-success:
                - set_github_status_failure
        set_github_status_failure:
            action: github.add_status
            input:
                user: <% $.github_status_org %>
                repo: <% $.github_status_repo %>
                sha: <% $.initial_commit %>
                state: failure
                context: <% $.github_status_context %>
                description: E2E tests have failed
                target_url: <% $.github_status_url %>

---
version: '1.0'

input:
  - hostname
  - dns_zone
  - instance_type
  - environment
  - key_name
  - keyfile
  - distro
  - windows_distro
  - role
  - release
  - st2tests_version
  - version
  - dev_build
  - initial_commit
  - chatops
  - pkg_env
  - bootstrap_branch
  - bootstrap_script
  - triggering_commit_url
  - debug

vars:
  - vm_id:
  - vm_windows_id:
  - vm_windows_info:
      private_ip_address: nothing
  - vm_windows_username: nothing
  - vm_windows_password: nothing
  - vm_fqdn: <% ctx().hostname %>.<% ctx().dns_zone %>
  - vm_info:
  - windows_hostname: <% ctx().hostname %>win
  - vm_windows_fqdn: <% ctx().hostname %>win.<% ctx().dns_zone %>
  - installed:
      distro:
      versions:
      version_str: not installed
  - bootstrap_script_url: <% coalesce(ctx().bootstrap_script, "https://raw.githubusercontent.com/StackStorm/st2-packages/" + ctx().bootstrap_branch + "/scripts/st2_bootstrap.sh") %>
  - bootstrap_script_arg_dev_or_ver: <%
      switch(
        ctx().dev_build => "dev=" + ctx().dev_build,
        not ctx().dev_build => "version=" + coalesce(ctx().version, '')) %> 
  - st2_username: st2admin
  - st2_password: Ch@ngeMe
  - github_status_org: StackStorm
  - github_status_repo: st2
  - github_status_context: st2/e2e/<% ctx().distro.toLower() %>
  - github_status_url: https://buildstatus.stackstorm.org/execution/<% ctx().st2.action_execution_id %>
  - failed: False

output:
  - versions: <% ctx().installed.versions %>
  - failed: <% ctx().failed %>

tasks:
  init:
    action: core.noop
    next:
      - publish: notify_status="started"
        do:
          - update_github_commit_status
          - notify

  update_github_commit_status:
    action: core.noop
    next:
      - when: <% ctx().initial_commit != null %>
        do: set_github_status_pending
      - when: <% ctx().initial_commit = null %>
        do: create_vm
  set_github_status_pending:
    action: github.add_status
    input:
      user: <% ctx().github_status_org %>
      repo: <% ctx().github_status_repo %>
      sha: <% ctx().initial_commit %>
      state: pending
      context: <% ctx().github_status_context %>
      description: E2E tests are running...
      target_url: <% ctx().github_status_url %>
    next:
      - when: <% succeeded() %>
        do: create_vm

  create_vm:
    action: st2cd.create_vm_role
    input:
      hostname: <% ctx().hostname %>
      instance_type: <% ctx().instance_type %>
      environment: <% ctx().environment %>
      key_name: <% ctx().key_name %>
      keyfile: <% ctx().keyfile %>
      dns_zone: <% ctx().dns_zone %>
      distro: pkg_<% ctx().distro %>
      role: <% ctx().role %>
    next:
      - when: <% succeeded() %>
        publish:
          - vm_info: <% result().output.vm_info %>
          - vm_id: <% result().output.vm_info.id %>
        do: get_bootstrap_script
      - when: <% failed() %>
        publish:
          - vm_id: <% result().output.get("vm_info", {}).get("id") %>
          - failed: True
        do: cleanup
  get_bootstrap_script:
    action: core.remote_sudo
    input:
      hosts: <% ctx().vm_info.private_ip_address %>
      cmd: curl -Ss -k -o /tmp/st2_bootstrap.sh <% ctx().bootstrap_script_url %>
    next:
      - when: <% succeeded() %>
        do: run_bootstrap_script
  run_bootstrap_script:
    action: core.remote_sudo
    input:
      hosts: <% ctx().vm_info.private_ip_address %>
      # We need to pass in --u16-add-insecure-py3-ppa when we're running ST2 v3.4
      # Note that while the flag is only for Ubuntu 16, the installer script on
      # other OSes will ignore it, so it's safe to use for all OSes.
      cmd: >-
        bash /tmp/st2_bootstrap.sh
        --<% ctx().pkg_env %>
        --<% ctx().release %>
        --<% ctx().bootstrap_script_arg_dev_or_ver %>
        --user=<% ctx().st2_username %>
        --password=<% ctx().st2_password %>
        <% switch(regex('^3\.4[^\d].*').matches(ctx().version) => '--u16-add-insecure-py3-ppa', default => '') %>
      timeout: 900
    next:
      - when: <% succeeded() %>
        do: cleanup_diskspace
      - when: <% failed() %>
        publish:
          - failed: True
        do: cleanup
  cleanup_diskspace:
    action: st2ci.cleanup_diskspace
    input:
      hosts: <% ctx().vm_info.private_ip_address %>
      timeout: 600
    next:
      - when: <% succeeded() %>
        do: check_debug_mode
  check_debug_mode:
    action: core.noop
    next:
      - when: <% not ctx().debug %>
        do: get_installed_version
      - when: <% ctx().debug %>
        do: enable_debug_mode
  enable_debug_mode:
    action: core.remote_sudo
    input:
      hosts: <% ctx().vm_info.private_ip_address %>
      cmd: crudini --set /etc/st2/st2.conf system debug True && st2ctl restart
      timeout: 120
    next:
      - do: get_installed_version
  get_installed_version:
    action: st2cd.st2_get_installed_version
    input:
      host: <% ctx().vm_info.private_ip_address %>
    next:
      - when: <% succeeded() %>
        publish:
          - installed:
              distro: <% result().output.distro %>
              versions: <% result().output.versions %>
              version_str: <% result().output.versions.items().select( $[0] + "=" + $[1]).join("\n\t") %>
              st2_version: <% result().output.versions.get("st2") %>
        # do: create_vm_windows
        do: run_e2e_tests
      - when: <% failed() %>
        publish:
          - failed: True
        do: cleanup
  # create_vm_windows:
  #   action: st2cd.create_vm_windows
  #   input:
  #     hostname: <% ctx().windows_hostname %>
  #     instance_type: <% ctx().instance_type %>
  #     environment: <% ctx().environment %>
  #     dns_zone: <% ctx().dns_zone %>
  #     distro: <% ctx().windows_distro %>
  #     role: <% ctx().role %>
  #   next:
  #     - when: <% succeeded() %>
  #       publish:
  #         - vm_windows_info: <% result().output.vm_info %>
  #         - vm_windows_id: <% result().output.vm_info.id %>
  #         - vm_windows_username: <% result().output.vm_username %>
  #         - vm_windows_password: <% result().output.vm_password %>
  #       do: run_e2e_tests
  #     - when: <% failed() %>
  #       publish:
  #         - vm_windows_id: <% result().output.get("vm_info", {}).get("id") %>
  #         - failed: True
  #       do: cleanup
  run_e2e_tests:
    action: st2cd.st2_e2e_tests
    input:
      host_ip: <% ctx().vm_info.private_ip_address %>
      host_fqdn: <% ctx().vm_fqdn %>
      chatops: <% ctx().chatops %>
      st2tests_version:
        <% switch(
          (ctx().st2tests_version)                   => ctx().st2tests_version,
          (ctx().version != null)                    => ctx().version,
          ("dev" in ctx().installed.st2_version)     => ctx().version,
          (not "dev" in ctx().installed.st2_version) => ctx().installed.st2_version) %>
      st2_username: <% ctx().st2_username %>
      st2_password: <% ctx().st2_password %>
      windows_host_ip: <% ctx().vm_windows_info.private_ip_address %>
      windows_host_fqdn: <% ctx().vm_windows_fqdn %>
      windows_username: <% ctx().vm_windows_username %>
      windows_password: <% ctx().vm_windows_password %>
    next:
      - when: <% succeeded() %>
        do: cleanup
      - when: <% failed() %>
        publish:
          - failed: True
        do: cleanup

  cleanup:
    action: st2ci.st2_pkg_e2e_test_cleanup
    input:
      hostname: <% ctx().hostname %>
      vm_id: <% ctx().vm_id %>
      win_hostname: <% ctx().windows_hostname %>
      win_vm_id: <% ctx().vm_windows_id %>
      debug: <% ctx().debug %>
    next:
      - when: <% not ctx().failed and not result().output.failed %>
        publish: notify_status="succeeded"
        do: notify
      - when: <% ctx().failed or result().output.failed %>
        publish: notify_status="failed"
        do: notify

  notify:
    action: st2ci.st2_pkg_e2e_test_notify
    input:
      notify_status: <% ctx().notify_status %>
      action_execution_id: <% ctx().st2.action_execution_id %>
      initial_commit: <% ctx().initial_commit %>
      triggering_commit_url: <% ctx().triggering_commit_url %>
      hostname: <% ctx().vm_fqdn %>
      distro: <% ctx().distro %>
      pkg_env: <% ctx().pkg_env %>
      release: <% ctx().release %>
      st2tests_version: <% ctx().st2tests_version %>
      version: <% ctx().version %>
      bootstrap_script_url: <% ctx().bootstrap_script_url %>
      installed: <% ctx().installed %>
      github_status_org: <% ctx().github_status_org %>
      github_status_repo: <% ctx().github_status_repo %>
      github_status_context: <% ctx().github_status_context %>
      github_status_url: <% ctx().github_status_url %>

---
version: '1.0'
input:
  - distro
  - release
  - version
  - enterprise_keys:
      stable: "{{st2kv('system.enterprise_key_stg_stable')}}"
      unstable: "{{st2kv('system.enterprise_key_stg_unstable')}}"
  - pkg_env: staging
  - distro_to_distro_version_map:
      RHEL7: el/7
      RHEL8: el/8
      UBUNTU16: ubuntu/xenial
      UBUNTU18: ubuntu/bionic
  - promoted_st2: false
  - promoted_st2chatops: false
  - promoted_st2web: false
  - notify_channels:
      - '#thunderdome'
  - notify_failure_channels:
      - '#thunderdome'
      - '#opstown'
vars:
  - webui_base_url: https://st2cicd.uswest2.stackstorm.net
output:
  - versions: <% dict(st2 => ctx().promoted_st2,
                      st2chatops => ctx().promoted_st2chatops,
                      st2web => ctx().promoted_st2web) %>
tasks:
  init:
    action: core.noop
    next:
      - when: <% succeeded() %>
        publish:
          - pkg_distro_version: <% ctx().distro_to_distro_version_map.get(ctx().distro) %>
        do:
          - notify_start
  notify_start:
    with:
      items: channel in <% ctx().notify_channels %>
    action: slack.chat.postMessage
    input:
      channel: <% item(channel) %>
      text: 'st2ci.st2_pkg_promote_all: STARTED'
      attachments: "[{\"fallback\": \"[st2ci.st2_pkg_promote_all: STARTED]\", \"title\": \"[st2ci.st2_pkg_promote_all: STARTED]\", \"title_link\": \"<% ctx().webui_base_url %>/#/history/<% ctx().st2.action_execution_id %>/general\", \"text\": \"DISTRO: <% ctx().distro %>\\nRELEASE: <% ctx().pkg_env %> <% ctx().release %>\\nVERSION: <% coalesce(ctx().version, 'latest') %>\", \"color\": \"#808080\"}]"
    next:
      - when: <% succeeded() %>
        do:
          - promote_all


  promote_all:
    next:
      - do:
          # Due to bug https://github.com/StackStorm/orquesta/issues/112,
          # these tasks do not properly join to process_completion when run
          # in parallel, so we run them sequential.
          - promote_st2
  promote_st2:
    action: st2ci.st2_pkg_promote
    input:
      package: st2
      distro_version: <% ctx().pkg_distro_version %>
      release: <% ctx().release %>
      version: <% ctx().version %>
    next:
      - when: <% succeeded() %>
        publish: promoted_st2=<% ctx().version + '-' + result().output.revision %>
        do: promote_st2chatops
      - when: <% failed() %>
        do: promote_st2chatops
  promote_st2chatops:
    action: st2ci.st2_pkg_promote
    input:
      package: st2chatops
      distro_version: <% ctx().pkg_distro_version %>
      release: <% ctx().release %>
      version: <% ctx().version %>
    next:
      - when: <% succeeded() %>
        publish: promoted_st2chatops=<% ctx().version + '-' + result().output.revision %>
        do: promote_st2web
      - when: <% failed() %>
        do: promote_st2web
  promote_st2web:
    action: st2ci.st2_pkg_promote
    input:
      package: st2web
      distro_version: <% ctx().pkg_distro_version %>
      release: <% ctx().release %>
      version: <% ctx().version %>
    next:
      - when: <% succeeded() %>
        publish: promoted_st2web=<% ctx().version + '-' + result().output.revision %>
        do: process_completion
      - when: <% failed() %>
        do: process_completion


  process_completion:
    action: core.noop
    next:
      - when: <% succeeded() and (not ctx().promoted_st2 or not ctx().promoted_st2chatops or not ctx().promoted_st2web) %>
        do: set_notify_failure
      - when: <% succeeded() and (ctx().promoted_st2 and ctx().promoted_st2chatops and ctx().promoted_st2web) %>
        do: set_notify_success

  set_notify_failure:
    action: core.noop
    next:
      - when: <% succeeded() %>
        publish:
          - notify_color: '#FF0000'
          - notify_completion_channels: <% ctx().notify_failure_channels %>
        do:
          - notify_failure
  set_notify_success:
    action: core.noop
    next:
      - when: <% succeeded() %>
        publish:
          - notify_color: '#008000'
          - notify_completion_channels: <% ctx().notify_channels %>
        do:
          - notify_completion
  notify_completion:
    with:
      items: channel in <% ctx().notify_completion_channels %>
    action: slack.chat.postMessage
    input:
      channel: <% item(channel) %>
      text: 'st2ci.st2_pkg_promote_all: COMPLETED'
      attachments: "[{\"fallback\": \"[st2ci.st2_pkg_promote_all: COMPLETED]\", \"title\": \"[st2ci.st2_pkg_promote_all: COMPLETED]\", \"title_link\": \"<% ctx().webui_base_url %>/#/history/<% ctx().st2.action_execution_id %>/general\", \"text\": \"DISTRO: <% ctx().distro %>\\nRELEASE: <% ctx().pkg_env %> <% ctx().release %>\\nVERSION: <% coalesce(ctx().version, 'latest') %>\\nPACKAGE PROMOTED:\\n\\tst2=<% ctx().promoted_st2 %>\\n\\tst2chatops=<% ctx().promoted_st2chatops %>\\n\\tst2web=<% ctx().promoted_st2web %>\", \"color\": \"<% ctx().notify_color %>\"}]"
  notify_failure:
    with:
      items: channel in <% ctx().notify_failure_channels %>
    action: slack.chat.postMessage
    input:
      channel: <% item(channel) %>
      text: 'st2ci.st2_pkg_promote_all: FAILED'
      attachments: "[{\"fallback\": \"[st2ci.st2_pkg_promote_all: FAILED]\", \"title\": \"[st2ci.st2_pkg_promote_all: FAILED]\", \"title_link\": \"<% ctx().webui_base_url %>/#/history/<% ctx().st2.action_execution_id %>/general\", \"text\": \"DISTRO: <% ctx().distro %>\\nRELEASE: <% ctx().pkg_env %> <% ctx().release %>\\nVERSION: <% coalesce(ctx().version, 'latest') %>\", \"color\": \"#FF0000\"}]"
    next:
      - do:
          - fail
